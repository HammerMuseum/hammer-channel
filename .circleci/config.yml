# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.2-stretch-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

# Jobs
build_and_test: &build_and_test
  <<: *defaults
  steps:
    - run: composer install -n --prefer-dist
    - run: phpunit
    - run: npm run prod
    # Run linting here

deploy: &deploy
  <<: *defaults
  steps:
    - run: echo "Deploy stage"
#    - attach_workspace:
#        at: /home/circleci
#    - add_ssh_keys:
#        fingerprints:
#          - "27:ff:5a:fa:94:df:d0:94:7c:dd:0f:0a:17:15:61:72"
#    - run: echo '$FINGERPRINT' >> ~/.ssh/known_hosts
#    - run: scp /home/circleci/hammer/build ssh -o $USER@$HOST:/$PATH


# Declare all of the jobs we should run.
version: 2
jobs:
  build_and_test:
     <<: *build_and_test
  deploy:
     <<: *deploy

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test