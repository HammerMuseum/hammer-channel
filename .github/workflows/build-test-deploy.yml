name: Build, Test, Deploy

on:
  push:
    branches: [master, develop]
    tags:
      - 'dev-*'
  pull_request:
    branches: [master, develop]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP and install composer dependencies
      uses: ./.github/actions/setup-php-environment
      with:
        php-version: 8.1

    - name: Install Composer dependencies
      run: composer install -n -q

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '14'

    - name: Install Node dependencies
      run: npm install

    - name: Setup environment variables
      run: |
        if [[ -z "${{ github.ref }}" ]]; then
          .circleci/scripts/add_env_vars_to_build.sh tagged
        else
          .circleci/scripts/add_env_vars_to_build.sh ${{ github.ref }}
        fi

    - name: Run frontend tests
      run: npm run test

    - name: Create production frontend build
      run: npm run production

    - name: Prepare database
      run: |
        touch storage/testing.sqlite
        php artisan key:generate --env=testing
        php artisan migrate --env=testing --database=sqlite_testing --force

    - name: Run PHPUnit tests
      run: ./vendor/bin/phpunit

    - name: Run PHP CodeSniffer
      run: ./vendor/bin/phpcs

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          vendor/
          public/css/
          public/js/
          public/fonts/
          public/images/
          public/icons/
          public/mix-manifest.json

  deploy_dev:
    needs: build_and_test
    if: startsWith(github.ref, 'refs/tags/dev-')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts

    - name: Setup PHP and install composer dependencies
      uses: ./.github/actions/setup-php-environment
      with:
        php-version: 8.1

    - name: Install Composer dependencies (production)
      run: composer install --optimize-autoloader --no-dev

    - name: Install Deployer
      run: |
        curl -LO https://deployer.org/deployer.phar
        sudo mv deployer.phar /usr/local/bin/dep
        sudo chmod +x /usr/local/bin/dep

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Whitelist GitHub Actions IP
      run: |
        IP=$(curl -s https://api.ipify.org)
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr $IP/32

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: Deploy to dev
      env:
        CI_DEV_HOST_URL: ${{ secrets.CI_DEV_HOST_URL }}
      run: |
        ./vendor/deployer/deployer/dep deploy dev
        ssh deploy@$CI_DEV_HOST_URL sudo systemctl reload php8.1-fpm.service

    - name: Remove GitHub Actions IP from whitelist
      if: always()
      run: |
        IP=$(curl -s https://api.ipify.org)
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr $IP/32

  deploy_stage:
    needs: build_and_test
    if: github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/stage-')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts

    - name: Setup PHP and install composer dependencies
      uses: ./.github/actions/setup-php-environment
      with:
        php-version: 8.1

    - name: Install Composer dependencies (production)
      run: composer install --optimize-autoloader --no-dev

    - name: Install Deployer
      run: |
        curl -LO https://deployer.org/deployer.phar
        sudo mv deployer.phar /usr/local/bin/dep
        sudo chmod +x /usr/local/bin/dep

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Whitelist GitHub Actions IP
      run: |
        IP=$(curl -s https://api.ipify.org)
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr $IP/32

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.STAGE_SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: Deploy to stage
      env:
        CI_STAGE_HOST_URL: ${{ secrets.CI_STAGE_HOST_URL }}
      run: |
        ./vendor/deployer/deployer/dep deploy stage
        ssh deploy@$CI_STAGE_HOST_URL sudo systemctl reload php8.1-fpm.service

    - name: Remove GitHub Actions IP from whitelist
      if: always()
      run: |
        IP=$(curl -s https://api.ipify.org)
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr $IP/32

  deploy_prod:
    needs: build_and_test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts

    - name: Setup PHP and install composer dependencies
      uses: ./.github/actions/setup-php-environment
      with:
        php-version: 8.1

    - name: Install Composer dependencies (production)
      run: composer install --optimize-autoloader --no-dev

    - name: Install Deployer
      run: |
        curl -LO https://deployer.org/deployer.phar
        sudo mv deployer.phar /usr/local/bin/dep
        sudo chmod +x /usr/local/bin/dep

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Whitelist GitHub Actions IP
      run: |
        IP=$(curl -s https://api.ipify.org)
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr $IP/32

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: Deploy to production
      env:
        CI_PROD_DEPLOY_URL: ${{ secrets.CI_PROD_DEPLOY_URL }}
      run: |
        ./vendor/deployer/deployer/dep deploy live
        ssh deploy@$CI_PROD_DEPLOY_URL sudo systemctl reload php8.1-fpm.service

    - name: Remove GitHub Actions IP from whitelist
      if: always()
      run: |
        IP=$(curl -s https://api.ipify.org)
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr $IP/32
