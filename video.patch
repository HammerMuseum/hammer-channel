diff --git a/resources/js/components/VideoComponent.vue b/resources/js/components/VideoComponent.vue
index faf9296..e097aef 100644
--- a/resources/js/components/VideoComponent.vue
+++ b/resources/js/components/VideoComponent.vue
@@ -1,6 +1,11 @@
 <template>
   <div class="video-wrapper">
-    <video-player dusk="video-player-component" :options="videoOptions" :title="title"/>
+    <video-player dusk="video-player-component"
+                  :options="videoOptions"
+                  :title="title"
+                  :trackList="trackList"
+                  @error="onPlayerError()">
+    </video-player>
     <div class="video__info">
         <div class="video-info__card">
           <div class="title"><h1>{{ title }}</h1></div>
@@ -23,6 +28,7 @@
 </template>
 <script>
+  import axios from 'axios';
   import VideoPlayer from "./VideoPlayer.vue";
   export default {
     name: 'VideoComponent',
@@ -38,12 +44,21 @@
       VideoPlayer
     },
     methods:{
-      toggleTranscription: function(){
+      toggleTranscription() {
         this.transcriptionIsVisible = !this.transcriptionIsVisible
-      }
+      },
     },
     data() {
       return {
+        trackList: [
+          {
+            src: `https://datastore.hammer.cogapp.com/api/videos/205/transcript`,
+            kind: "captions",
+            label: "English",
+            srcLang: 'en',
+            default: true
+          }
+        ],
         videoTitle: this.title,
         transcriptionIsVisible: false,
         transcription: null,
@@ -60,12 +75,6 @@
       };
     },
     mounted() {
-      axios
-        .get(`https://datastore.hammer.cogapp.com/api/videos/${this.aid}/transcript`)
-        .then((response) => {
-          console.log(response);
-          this.transcription = response.data.data[0].transcription;
-        });
     }
   }
 </script>
diff --git a/resources/js/components/VideoPlayer.vue b/resources/js/components/VideoPlayer.vue
index b6115a0..f9ce0a3 100644
--- a/resources/js/components/VideoPlayer.vue
+++ b/resources/js/components/VideoPlayer.vue
@@ -1,6 +1,14 @@
 <template>
     <div class="video-js-responsive-container vjs-hd">
-        <video ref="videoPlayer" class="video-js hammer-video-player vjs-default-skin"></video>
+        <video ref="videoPlayer" class="video-js hammer-video-player vjs-default-skin">
+            <track v-bind:key="track.id"
+                v-for="track in trackList"
+                :kind="track.kind"
+                :label="track.label"
+                :src="track.src"
+                :srcLang="track.srcLang"
+                :default="track.default">
+        </video>
     </div>
 </template>
@@ -16,7 +24,13 @@ export default {
             default() {
                 return {};
             }
-        }
+        },
+        trackList: {
+            type: Array,
+            default() {
+                return [];
+            },
+        },
     },
     data() {
         return {
@@ -24,9 +38,70 @@ export default {
         }
     },
     mounted() {
-      this.player = videojs(this.$refs.videoPlayer, this.options, function onPlayerReady() {
-          console.log('onPlayerReady', this);
+        const DEFAULT_EVENTS = [
+          'loadeddata',
+          'canplay',
+          'canplaythrough',
+          'play',
+          'pause',
+          'waiting',
+          'playing',
+          'ended',
+          'error'
+        ]
+
+      const self = this;
+
+      this.player = videojs(this.$refs.videoPlayer, this.options, function() {
+        // events
+        const events = DEFAULT_EVENTS;
+        // watch events
+        const onEdEvents = {}
+        for (let i = 0; i < events.length; i++) {
+          if (typeof events[i] === 'string' && onEdEvents[events[i]] === undefined) {
+            (event => {
+              onEdEvents[event] = null
+              this.on(event, () => {
+                self.$emit(event, self.player)
+              })
+            })(events[i])
+          }
+        }
+
+        // watch timeupdate
+        this.on('timeupdate', function() {
+          self.$smit('timeupdate', this.currentTime())
+        })
+
+        this.on('error', function() {
+          if(self.player.error().code === 2) {
+            self.player.off('ready');
+            axios.get(
+              `https://datastore.hammer.cogapp.com/api/videos/205`,
+            ).then((res) => {
+              console.log(res)
+              self.player.src({
+                type: 'video', src: res.data[0].video_url
+              });
+              self.player.ready(function() {
+                if(storedTime > 0) {
+                  self.player.currentTime(storedTime);
+                }
+
+                if(autoPlay) {
+                  autoPlay = false;
+                  self.player.play();
+                }
+              });
+            })
+          }
+        })
+
+        // player readied
+        self.$emit('ready', this)
       })
+
+      // Setup overlay content. Move up to parent?
       const overlay_content = `<p>${this.title}</p>`;
       this.player.overlay({
         overlays: [{
